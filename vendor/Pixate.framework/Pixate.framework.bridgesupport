<?xml version='1.0'?>
<signatures version='1.0'>
<enum name='PXCacheStylesTypeImages' value='4'/>
<enum name='PXCacheStylesTypeNone' value='0'/>
<enum name='PXCacheStylesTypeSave' value='2'/>
<enum name='PXCacheStylesTypeStyleOnce' value='1'/>
<enum name='PXGradientUnitsBoundingBox' value='0'/>
<enum name='PXGradientUnitsUserSpace' value='1'/>
<enum name='PXLinearGradientDirectionToBottom' value='4'/>
<enum name='PXLinearGradientDirectionToBottomLeft' value='5'/>
<enum name='PXLinearGradientDirectionToBottomRight' value='3'/>
<enum name='PXLinearGradientDirectionToLeft' value='6'/>
<enum name='PXLinearGradientDirectionToRight' value='2'/>
<enum name='PXLinearGradientDirectionToTop' value='0'/>
<enum name='PXLinearGradientDirectionToTopLeft' value='7'/>
<enum name='PXLinearGradientDirectionToTopRight' value='1'/>
<enum name='PXParseErrorDestinationConsole' value='1'/>
<enum name='PXParseErrorDestinationNone' value='0'/>
<enum name='PXStylesheetOriginApplication' value='0'/>
<enum name='PXStylesheetOriginInline' value='3'/>
<enum name='PXStylesheetOriginUser' value='1'/>
<enum name='PXStylesheetOriginView' value='2'/>
<enum name='PXStylingNone' value='2'/>
<enum name='PXStylingNormal' value='1'/>
<enum name='PXStylingUndefined' value='0'/>
<enum name='TWO_PI' value='6.283185307179586'/>
<enum name='kAlignViewPortNone' value='0'/>
<enum name='kAlignViewPortXMaxYMax' value='9'/>
<enum name='kAlignViewPortXMaxYMid' value='8'/>
<enum name='kAlignViewPortXMaxYMin' value='7'/>
<enum name='kAlignViewPortXMidYMax' value='6'/>
<enum name='kAlignViewPortXMidYMid' value='5'/>
<enum name='kAlignViewPortXMidYMin' value='4'/>
<enum name='kAlignViewPortXMinYMax' value='3'/>
<enum name='kAlignViewPortXMinYMid' value='2'/>
<enum name='kAlignViewPortXMinYMin' value='1'/>
<enum name='kCropTypeMeet' value='0'/>
<enum name='kCropTypeSlice' value='1'/>
<enum name='kDimensionTypeCentimeters' value='4'/>
<enum name='kDimensionTypeDegrees' value='9'/>
<enum name='kDimensionTypeDevicePixels' value='3'/>
<enum name='kDimensionTypeEms' value='0'/>
<enum name='kDimensionTypeExs' value='1'/>
<enum name='kDimensionTypeGradians' value='11'/>
<enum name='kDimensionTypeHertz' value='14'/>
<enum name='kDimensionTypeInches' value='6'/>
<enum name='kDimensionTypeKilohertz' value='15'/>
<enum name='kDimensionTypeMillimeters' value='5'/>
<enum name='kDimensionTypeMilliseconds' value='12'/>
<enum name='kDimensionTypePercentage' value='16'/>
<enum name='kDimensionTypePicas' value='8'/>
<enum name='kDimensionTypePixels' value='2'/>
<enum name='kDimensionTypePoints' value='7'/>
<enum name='kDimensionTypeRadians' value='10'/>
<enum name='kDimensionTypeSeconds' value='13'/>
<enum name='kDimensionTypeUserDefined' value='17'/>
<enum name='kStrokeTypeCenter' value='0'/>
<enum name='kStrokeTypeInner' value='1'/>
<enum name='kStrokeTypeOuter' value='2'/>
<class name='NSDictionary'>
<method selector='toCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='toCSSWithKeys:'>
<arg index='0' declared_type='NSArray*' name='keys' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSObject'>
<method selector='animationPropertyHandlers'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='applyFillToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyInsetToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyOutsetToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyStrokeToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='attributeValueForName:withNamespace:'>
<arg index='0' declared_type='NSString*' name='name' type='@'/>
<arg index='1' declared_type='NSString*' name='aNamespace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='blendMode'>
<retval declared_type='CGBlendMode' type='i'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='canStylePseudoClass:'>
<arg index='0' declared_type='NSString*' name='pseudoClass' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clippingPath'>
<retval declared_type='PXShape*' type='@'/>
</method>
<method selector='darkenByPercent:'>
<arg index='0' declared_type='CGFloat' name='percent' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='defaultPseudoClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fill'>
<retval declared_type='id' type='@'/>
</method>
<method selector='frame'>
<retval declared_type='int' type='i'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isVirtualControl'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightenByPercent:'>
<arg index='0' declared_type='CGFloat' name='percent' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='opacity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='padding'>
<retval declared_type='PXOffsets*' type='@'/>
</method>
<method selector='parent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='pxStyleChildren'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='pxStyleElementName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleNamespace'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='registerNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method selector='render:'>
<arg index='0' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImageWithBounds:withOpacity:'>
<arg index='0' declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' declared_type='BOOL' name='opaque' type='B'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='setBlendMode:'>
<arg index='0' declared_type='CGBlendMode' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounds:'>
<arg index='0' declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClippingPath:'>
<arg index='0' declared_type='PXShape*' name='clippingPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFill:'>
<arg index='0' declared_type='id' name='fill' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFrame:'>
<arg index='0' declared_type='int' name='frame' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg index='0' declared_type='CGFloat' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPadding:'>
<arg index='0' declared_type='PXOffsets*' name='padding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParent:'>
<arg index='0' declared_type='id' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadow:'>
<arg index='0' declared_type='id' name='shadow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStroke:'>
<arg index='0' declared_type='id' name='stroke' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleCSS:'>
<arg index='0' declared_type='NSString*' name='styleCSS' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:'>
<arg index='0' declared_type='NSString*' name='styleClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:'>
<arg index='0' declared_type='NSString*' name='styleId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleMode:'>
<arg index='0' declared_type='PXStylingMode' name='styleMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg index='0' declared_type='CGAffineTransform' name='transform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVisible:'>
<arg index='0' declared_type='BOOL' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadow'>
<retval declared_type='id' type='@'/>
</method>
<method selector='stroke'>
<retval declared_type='id' type='@'/>
</method>
<method selector='styleCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleMode'>
<retval declared_type='PXStylingMode' type='i'/>
</method>
<method selector='styleableForPseudoElement:'>
<arg index='0' declared_type='NSString*' name='pseudoElement' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='supportedPseudoClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='supportedPseudoElements'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='updateStyles'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesAsync'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursively'>
<retval declared_type='void' type='v'/>
</method>
<method selector='updateStylesNonRecursivelyAsync'>
<retval declared_type='void' type='v'/>
</method>
<method selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='PXArc'>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='endingAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setCenter:'>
<arg index='0' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndingAngle:'>
<arg index='0' declared_type='CGFloat' name='endingAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg index='0' declared_type='CGFloat' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartingAngle:'>
<arg index='0' declared_type='CGFloat' name='startingAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startingAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXCircle'>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method class_method='true' selector='circleWithCenter:withRadius:'>
<arg index='0' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<arg index='1' declared_type='CGFloat' name='radius' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initCenter:radius:'>
<arg index='0' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<arg index='1' declared_type='CGFloat' name='radius' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setCenter:'>
<arg index='0' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg index='0' declared_type='CGFloat' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXClassUtils'>
<method class_method='true' selector='classDescription:'>
<arg index='0' declared_type='Class' name='c' type='#'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='classDescriptionForObject:'>
<arg index='0' declared_type='id' name='object' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PXDimension'>
<method selector='degrees'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='dimension'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='dimensionWithNumber:withDimension:'>
<arg index='0' declared_type='CGFloat' name='number' type='f'/>
<arg index='1' declared_type='NSString*' name='dimension' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithNumber:withDimension:'>
<arg index='0' declared_type='CGFloat' name='number' type='f'/>
<arg index='1' declared_type='NSString*' name='dimension' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAngle'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isFrequency'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isLength'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isPercentage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTime'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isUserDefined'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='number'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='points'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='radians'>
<retval declared_type='PXDimension*' type='@'/>
</method>
<method selector='type'>
<retval declared_type='PXDimensionType' type='i'/>
</method>
</class>
<class name='PXEllipse'>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method class_method='true' selector='ellipseWithCenter:withRadiusX:withRadiusY:'>
<arg index='0' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<arg index='1' declared_type='CGFloat' name='radiusX' type='f'/>
<arg index='2' declared_type='CGFloat' name='radiusY' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initCenter:radiusX:radiusY:'>
<arg index='0' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<arg index='1' declared_type='CGFloat' name='radiusX' type='f'/>
<arg index='2' declared_type='CGFloat' name='radiusY' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radiusX'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='radiusY'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setCenter:'>
<arg index='0' declared_type='CGPoint' name='center' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusX:'>
<arg index='0' declared_type='CGFloat' name='radiusX' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusY:'>
<arg index='0' declared_type='CGFloat' name='radiusY' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXGradient'>
<method selector='addColor:'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addColor:withOffset:'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<arg index='1' declared_type='CGFloat' name='offset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='colors'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='gradient'>
<retval declared_type='CGGradientRef' type='^{CGGradient=}'/>
</method>
<method selector='gradientUnits'>
<retval declared_type='PXGradientUnits' type='i'/>
</method>
<method selector='offsets'>
<retval declared_type='NSMutableArray*' type='@'/>
</method>
<method selector='setColors:'>
<arg index='0' declared_type='NSMutableArray*' name='colors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientUnits:'>
<arg index='0' declared_type='PXGradientUnits' name='gradientUnits' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOffsets:'>
<arg index='0' declared_type='NSMutableArray*' name='offsets' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransform:'>
<arg index='0' declared_type='CGAffineTransform' name='transform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
</class>
<class name='PXLine'>
<method selector='initX1:y1:x2:y2:'>
<arg index='0' declared_type='CGFloat' name='x1' type='f'/>
<arg index='1' declared_type='CGFloat' name='y1' type='f'/>
<arg index='2' declared_type='CGFloat' name='x2' type='f'/>
<arg index='3' declared_type='CGFloat' name='y2' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='p1'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='p2'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setP1:'>
<arg index='0' declared_type='CGPoint' name='p1' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP2:'>
<arg index='0' declared_type='CGPoint' name='p2' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXLinearGradient'>
<method selector='angle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cssAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='gradientDirection'>
<retval declared_type='PXLinearGradientDirection' type='i'/>
</method>
<method class_method='true' selector='gradientFromStartColor:endColor:'>
<arg index='0' declared_type='UIColor*' name='startColor' type='@'/>
<arg index='1' declared_type='UIColor*' name='endColor' type='@'/>
<retval declared_type='PXLinearGradient*' type='@'/>
</method>
<method selector='p1'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='p2'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='psAngle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAngle:'>
<arg index='0' declared_type='CGFloat' name='angle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCssAngle:'>
<arg index='0' declared_type='CGFloat' name='cssAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGradientDirection:'>
<arg index='0' declared_type='PXLinearGradientDirection' name='gradientDirection' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP1:'>
<arg index='0' declared_type='CGPoint' name='p1' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setP2:'>
<arg index='0' declared_type='CGPoint' name='p2' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPsAngle:'>
<arg index='0' declared_type='CGFloat' name='psAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXOffsets'>
<method selector='bottom'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='hasOffset'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithTop:right:bottom:left:'>
<arg index='0' declared_type='CGFloat' name='top' type='f'/>
<arg index='1' declared_type='CGFloat' name='right' type='f'/>
<arg index='2' declared_type='CGFloat' name='bottom' type='f'/>
<arg index='3' declared_type='CGFloat' name='left' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='left'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='right'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='top'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXPaintGroup'>
<method selector='addPaint:'>
<arg index='0' declared_type='id' name='paint' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithPaints:'>
<arg index='0' declared_type='NSArray*' name='paints' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='paints'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='PXPath'>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='createPathFromPathData:'>
<arg index='0' declared_type='NSString*' name='data' type='@'/>
<retval declared_type='PXPath*' type='@'/>
</method>
<method selector='cubicBezierToX1:y1:x2:y2:x3:y3:'>
<arg index='0' declared_type='CGFloat' name='x1' type='f'/>
<arg index='1' declared_type='CGFloat' name='y1' type='f'/>
<arg index='2' declared_type='CGFloat' name='x2' type='f'/>
<arg index='3' declared_type='CGFloat' name='y2' type='f'/>
<arg index='4' declared_type='CGFloat' name='x3' type='f'/>
<arg index='5' declared_type='CGFloat' name='y3' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='ellipticalArcX:y:radiusX:radiusY:startAngle:endAngle:'>
<arg index='0' declared_type='CGFloat' name='x' type='f'/>
<arg index='1' declared_type='CGFloat' name='y' type='f'/>
<arg index='2' declared_type='CGFloat' name='radiusX' type='f'/>
<arg index='3' declared_type='CGFloat' name='radiusY' type='f'/>
<arg index='4' declared_type='CGFloat' name='startAngle' type='f'/>
<arg index='5' declared_type='CGFloat' name='endAngle' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='lineToX:y:'>
<arg index='0' declared_type='CGFloat' name='x' type='f'/>
<arg index='1' declared_type='CGFloat' name='y' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='moveToX:y:'>
<arg index='0' declared_type='CGFloat' name='x' type='f'/>
<arg index='1' declared_type='CGFloat' name='y' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='quadraticBezierToX1:y1:x2:y2:'>
<arg index='0' declared_type='CGFloat' name='x1' type='f'/>
<arg index='1' declared_type='CGFloat' name='y1' type='f'/>
<arg index='2' declared_type='CGFloat' name='x2' type='f'/>
<arg index='3' declared_type='CGFloat' name='y2' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXPolygon'>
<method selector='closed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithPoints:'>
<arg index='0' declared_type='NSArray*' name='points' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='points'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='setClosed:'>
<arg index='0' declared_type='BOOL' name='closed' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPoints:'>
<arg index='0' declared_type='NSArray*' name='points' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXRadialGradient'>
<method selector='endCenter'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='radius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setEndCenter:'>
<arg index='0' declared_type='CGPoint' name='endCenter' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadius:'>
<arg index='0' declared_type='CGFloat' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStartCenter:'>
<arg index='0' declared_type='CGPoint' name='startCenter' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startCenter'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
</class>
<class name='PXRectangle'>
<method selector='hasRoundedCorners'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithRect:'>
<arg index='0' declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='radiusBottomLeft'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='radiusBottomRight'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='radiusTopLeft'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='radiusTopRight'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='setCornerRadii:'>
<arg index='0' declared_type='CGSize' name='radii' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerRadius:'>
<arg index='0' declared_type='CGFloat' name='radius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg index='0' declared_type='CGFloat' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusBottomLeft:'>
<arg index='0' declared_type='CGSize' name='radiusBottomLeft' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusBottomRight:'>
<arg index='0' declared_type='CGSize' name='radiusBottomRight' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusTopLeft:'>
<arg index='0' declared_type='CGSize' name='radiusTopLeft' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRadiusTopRight:'>
<arg index='0' declared_type='CGSize' name='radiusTopRight' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSize:'>
<arg index='0' declared_type='CGSize' name='size' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg index='0' declared_type='CGFloat' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setX:'>
<arg index='0' declared_type='CGFloat' name='x' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setY:'>
<arg index='0' declared_type='CGFloat' name='y' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='size'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='x'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='y'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXSVGLoader'>
<method selector='URL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='addShape:'>
<arg index='0' declared_type='PXShape*' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyStyles:forShape:'>
<arg index='0' declared_type='NSDictionary*' name='attributeDict' type='@'/>
<arg index='1' declared_type='PXShape*' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='loadFromURL:'>
<arg index='0' declared_type='NSURL*' name='URL' type='@'/>
<retval declared_type='PXShapeDocument*' type='@'/>
</method>
<method class_method='true' selector='loaderClass'>
<retval declared_type='Class' type='#'/>
</method>
<method selector='numberFromString:'>
<arg index='0' declared_type='NSString*' name='attributeValue' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method class_method='true' selector='setLoaderClass:'>
<arg index='0' declared_type='Class' name='class' type='#'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURL:'>
<arg index='0' declared_type='NSURL*' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXShadow'>
<method selector='blendMode'>
<retval declared_type='CGBlendMode' type='i'/>
</method>
<method selector='blurDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='horizontalOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='inset'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBlendMode:'>
<arg index='0' declared_type='CGBlendMode' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBlurDistance:'>
<arg index='0' declared_type='CGFloat' name='blurDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHorizontalOffset:'>
<arg index='0' declared_type='CGFloat' name='horizontalOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInset:'>
<arg index='0' declared_type='BOOL' name='inset' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSpreadDistance:'>
<arg index='0' declared_type='CGFloat' name='spreadDistance' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setVerticalOffset:'>
<arg index='0' declared_type='CGFloat' name='verticalOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='spreadDistance'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='verticalOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXShadowGroup'>
<method selector='addShadowPaint:'>
<arg index='0' declared_type='id' name='shadow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='shadows'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='PXShape'>
<method selector='clearPath'>
<retval declared_type='void' type='v'/>
</method>
<method selector='newPath'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='owningDocument'>
<retval declared_type='PXShapeDocument*' type='@'/>
</method>
<method selector='path'>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='renderChildren:'>
<arg index='0' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsDisplay'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXShapeDocument'>
<method selector='addShape:forName:'>
<arg index='0' declared_type='id' name='shape' type='@'/>
<arg index='1' declared_type='NSString*' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='parentView'>
<retval declared_type='PXShapeView*' type='@'/>
</method>
<method selector='setBounds:'>
<arg index='0' declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParentView:'>
<arg index='0' declared_type='PXShapeView*' name='parentView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShape:'>
<arg index='0' declared_type='id' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shape'>
<retval declared_type='id' type='@'/>
</method>
<method selector='shapeForName:'>
<arg index='0' declared_type='NSString*' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='PXShapeGroup'>
<method selector='addShape:'>
<arg index='0' declared_type='id' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='height'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='removeShape:'>
<arg index='0' declared_type='id' name='shape' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeight:'>
<arg index='0' declared_type='CGFloat' name='height' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewport:'>
<arg index='0' declared_type='CGRect' name='viewport' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewportAlignment:'>
<arg index='0' declared_type='AlignViewPortType' name='viewportAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewportCrop:'>
<arg index='0' declared_type='CropType' name='viewportCrop' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg index='0' declared_type='CGFloat' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shapeAtIndex:'>
<arg index='0' declared_type='NSUInteger' name='index' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='shapeCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='viewPortTransform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
<method selector='viewport'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method selector='viewportAlignment'>
<retval declared_type='AlignViewPortType' type='i'/>
</method>
<method selector='viewportCrop'>
<retval declared_type='CropType' type='i'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXShapeView'>
<method selector='applyBoundsToScene'>
<retval declared_type='void' type='v'/>
</method>
<method selector='document'>
<retval declared_type='PXShapeDocument*' type='@'/>
</method>
<method selector='loadSceneFromURL:'>
<arg index='0' declared_type='NSURL*' name='URL' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='renderToImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='resourcePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setDocument:'>
<arg index='0' declared_type='PXShapeDocument*' name='document' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResourcePath:'>
<arg index='0' declared_type='NSString*' name='resourcePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXSolidPaint'>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithColor:'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='paintWithColor:'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='UIColor*' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXStroke'>
<method selector='color'>
<retval declared_type='id' type='@'/>
</method>
<method selector='dashArray'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='dashOffset'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithStrokeWidth:'>
<arg index='0' declared_type='CGFloat' name='width' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='lineCap'>
<retval declared_type='CGLineCap' type='i'/>
</method>
<method selector='lineJoin'>
<retval declared_type='CGLineJoin' type='i'/>
</method>
<method selector='miterLimit'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='newStrokedPath:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<retval declared_type='CGPathRef' type='^{CGPath=}'/>
</method>
<method selector='setColor:'>
<arg index='0' declared_type='id' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDashArray:'>
<arg index='0' declared_type='NSArray*' name='dashArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDashOffset:'>
<arg index='0' declared_type='CGFloat' name='dashOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineCap:'>
<arg index='0' declared_type='CGLineCap' name='lineCap' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLineJoin:'>
<arg index='0' declared_type='CGLineJoin' name='lineJoin' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMiterLimit:'>
<arg index='0' declared_type='CGFloat' name='miterLimit' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setType:'>
<arg index='0' declared_type='PXStrokeType' name='type' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWidth:'>
<arg index='0' declared_type='CGFloat' name='width' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='type'>
<retval declared_type='PXStrokeType' type='i'/>
</method>
<method selector='width'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='PXStrokeGroup'>
<method selector='addStroke:'>
<arg index='0' declared_type='id' name='stroke' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXStrokeStroke'>
<method selector='setStrokeEffect:'>
<arg index='0' declared_type='PXStroke*' name='strokeEffect' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStrokeToApply:'>
<arg index='0' declared_type='id' name='strokeToApply' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='strokeEffect'>
<retval declared_type='PXStroke*' type='@'/>
</method>
<method selector='strokeToApply'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='PXStylesheet'>
<method selector='errors'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='monitorChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='origin'>
<retval declared_type='PXStylesheetOrigin' type='i'/>
</method>
<method selector='setErrors:'>
<arg index='0' declared_type='NSArray*' name='errors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilePath:'>
<arg index='0' declared_type='NSString*' name='filePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonitorChanges:'>
<arg index='0' declared_type='BOOL' name='monitorChanges' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='PXVector'>
<method selector='add:'>
<arg index='0' declared_type='PXVector*' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='angle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='angleBetweenVector:'>
<arg index='0' declared_type='PXVector*' name='vector' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='cross:'>
<arg index='0' declared_type='PXVector*' name='vector' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='divide:'>
<arg index='0' declared_type='CGFloat' name='scalar' type='f'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='dot:'>
<arg index='0' declared_type='PXVector*' name='vector' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='initWithX:Y:'>
<arg index='0' declared_type='CGFloat' name='x' type='f'/>
<arg index='1' declared_type='CGFloat' name='y' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='length'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='magnitude'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='multiply:'>
<arg index='0' declared_type='CGFloat' name='scalar' type='f'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='perp'>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='perpendicular:'>
<arg index='0' declared_type='PXVector*' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='projectOnto:'>
<arg index='0' declared_type='PXVector*' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='subtract:'>
<arg index='0' declared_type='PXVector*' name='vector' type='@'/>
<retval declared_type='PXVector*' type='@'/>
</method>
<method selector='unit'>
<retval declared_type='PXVector*' type='@'/>
</method>
<method class_method='true' selector='vectorWithStartPoint:EndPoint:'>
<arg index='0' declared_type='CGPoint' name='p1' type='{CGPoint=ff}'/>
<arg index='1' declared_type='CGPoint' name='p2' type='{CGPoint=ff}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='vectorWithX:Y:'>
<arg index='0' declared_type='CGFloat' name='x' type='f'/>
<arg index='1' declared_type='CGFloat' name='y' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='x'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='y'>
<retval declared_type='CGFloat' type='f'/>
</method>
</class>
<class name='Pixate'>
<method class_method='true' selector='apiVersion'>
<retval declared_type='int' type='i'/>
</method>
<method class_method='true' selector='applyStylesheets'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='buildDate'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method class_method='true' selector='clearImageCache'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='clearStyleCache'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='configuration'>
<retval declared_type='PixateConfiguration*' type='@'/>
</method>
<method class_method='true' selector='currentApplicationStylesheet'>
<retval declared_type='PXStylesheet*' type='@'/>
</method>
<method class_method='true' selector='currentUserStylesheet'>
<retval declared_type='PXStylesheet*' type='@'/>
</method>
<method class_method='true' selector='currentViewStylesheet'>
<retval declared_type='PXStylesheet*' type='@'/>
</method>
<method class_method='true' selector='licenseEmail'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='licenseKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='licenseKey:forUser:'>
<arg index='0' declared_type='NSString*' name='licenseKey' type='@'/>
<arg index='1' declared_type='NSString*' name='licenseEmail' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='matchingDeclarationsForStyleable:'>
<arg index='0' declared_type='id' name='styleable' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='matchingRuleSetsForStyleable:'>
<arg index='0' declared_type='id' name='styleable' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='refreshStylesWithOrientationChange'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='selectFromStyleable:usingSelector:'>
<arg index='0' declared_type='id' name='styleable' type='@'/>
<arg index='1' declared_type='NSString*' name='source' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='setRefreshStylesWithOrientationChange:'>
<arg index='0' declared_type='BOOL' name='value' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='styleSheetFromFilePath:withOrigin:'>
<arg index='0' declared_type='NSString*' name='filePath' type='@'/>
<arg index='1' declared_type='PXStylesheetOrigin' name='origin' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='styleSheetFromSource:withOrigin:'>
<arg index='0' declared_type='NSString*' name='source' type='@'/>
<arg index='1' declared_type='PXStylesheetOrigin' name='origin' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='titaniumMode'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='updateStyles:'>
<arg index='0' declared_type='id' name='styleable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesAsync:'>
<arg index='0' declared_type='id' name='styleable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesForAllViews'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesNonRecursively:'>
<arg index='0' declared_type='id' name='styleable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='updateStylesNonRecursivelyAsync:'>
<arg index='0' declared_type='id' name='styleable' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='version'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='PixateConfiguration'>
<method selector='cacheImages'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cacheStyles'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cacheStylesType'>
<retval declared_type='PXCacheStylesType' type='i'/>
</method>
<method selector='imageCacheCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='imageCacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='parseErrorDestination'>
<retval declared_type='PXParseErrorDestination' type='i'/>
</method>
<method selector='preventRedundantStyling'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='propertyValueForName:'>
<arg index='0' declared_type='NSString*' name='name' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='sendParseMessage:'>
<arg index='0' declared_type='NSString*' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheStylesType:'>
<arg index='0' declared_type='PXCacheStylesType' name='cacheStylesType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageCacheCount:'>
<arg index='0' declared_type='NSUInteger' name='imageCacheCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageCacheSize:'>
<arg index='0' declared_type='NSUInteger' name='imageCacheSize' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setParseErrorDestination:'>
<arg index='0' declared_type='PXParseErrorDestination' name='parseErrorDestination' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPropertyValue:forName:'>
<arg index='0' declared_type='id' name='value' type='@'/>
<arg index='1' declared_type='NSString*' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleCacheCount:'>
<arg index='0' declared_type='NSUInteger' name='styleCacheCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:'>
<arg index='0' declared_type='NSString*' name='styleClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:'>
<arg index='0' declared_type='NSString*' name='styleId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleMode:'>
<arg index='0' declared_type='PXStylingMode' name='styleMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='styleCacheCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleMode'>
<retval declared_type='PXStylingMode' type='i'/>
</method>
</class>
<class name='UIBarButtonItem'>
<method selector='pxStyleElementName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPxStyleElementName:'>
<arg index='0' declared_type='NSString*' name='pxStyleElementName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPxStyleParent:'>
<arg index='0' declared_type='id' name='pxStyleParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIColor'>
<method class_method='true' selector='colorFromName:'>
<arg index='0' declared_type='NSString*' name='name' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithARGBValue:'>
<arg index='0' declared_type='uint' name='value' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:'>
<arg index='0' declared_type='NSString*' name='hexString' type='@'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHexString:withAlpha:'>
<arg index='0' declared_type='NSString*' name='hexString' type='@'/>
<arg index='1' declared_type='CGFloat' name='alpha' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:lightness:'>
<arg index='0' declared_type='CGFloat' name='hue' type='f'/>
<arg index='1' declared_type='CGFloat' name='saturation' type='f'/>
<arg index='2' declared_type='CGFloat' name='lightness' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithHue:saturation:lightness:alpha:'>
<arg index='0' declared_type='CGFloat' name='hue' type='f'/>
<arg index='1' declared_type='CGFloat' name='saturation' type='f'/>
<arg index='2' declared_type='CGFloat' name='lightness' type='f'/>
<arg index='3' declared_type='CGFloat' name='alpha' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithRGBAValue:'>
<arg index='0' declared_type='uint' name='value' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method class_method='true' selector='colorWithRGBValue:'>
<arg index='0' declared_type='uint' name='value' type='I'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='darkenByPercent:'>
<arg index='0' declared_type='CGFloat' name='percent' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='getHue:saturation:lightness:alpha:'>
<arg index='0' declared_type='CGFloat*' name='hue' type='^f'/>
<arg index='1' declared_type='CGFloat*' name='saturation' type='^f'/>
<arg index='2' declared_type='CGFloat*' name='lightness' type='^f'/>
<arg index='3' declared_type='CGFloat*' name='alpha' type='^f'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='lightenByPercent:'>
<arg index='0' declared_type='CGFloat' name='percent' type='f'/>
<retval declared_type='UIColor*' type='@'/>
</method>
</class>
<class name='UINavigationItem'>
<method selector='pxStyleElementName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPxStyleElementName:'>
<arg index='0' declared_type='NSString*' name='pxStyleElementName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPxStyleParent:'>
<arg index='0' declared_type='id' name='pxStyleParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UITabBarItem'>
<method selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setPxStyleParent:'>
<arg index='0' declared_type='id' name='pxStyleParent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIView'>
<method selector='setStyleCSS:'>
<arg index='0' declared_type='NSString*' name='styleCSS' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleClass:'>
<arg index='0' declared_type='NSString*' name='styleClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleId:'>
<arg index='0' declared_type='NSString*' name='styleId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStyleMode:'>
<arg index='0' declared_type='PXStylingMode' name='styleMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='styleCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='styleMode'>
<retval declared_type='PXStylingMode' type='i'/>
</method>
</class>
<informal_protocol name='PXBoundable'>
<method type='{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4' selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method type='v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8' selector='setBounds:'>
<arg index='0' declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXPaint'>
<method type='v16@0:4^{CGPath=}8^{CGContext=}12' selector='applyFillToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method type='i8@0:4' selector='blendMode'>
<retval declared_type='CGBlendMode' type='i'/>
</method>
<method type='@12@0:4f8' selector='darkenByPercent:'>
<arg index='0' declared_type='CGFloat' name='percent' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method type='B8@0:4' selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@12@0:4f8' selector='lightenByPercent:'>
<arg index='0' declared_type='CGFloat' name='percent' type='f'/>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4i8' selector='setBlendMode:'>
<arg index='0' declared_type='CGBlendMode' name='blendMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXPaintable'>
<method type='@8@0:4' selector='clippingPath'>
<retval declared_type='PXShape*' type='@'/>
</method>
<method type='@8@0:4' selector='fill'>
<retval declared_type='id' type='@'/>
</method>
<method type='f8@0:4' selector='opacity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method type='v12@0:4@8' selector='setClippingPath:'>
<arg index='0' declared_type='PXShape*' name='clippingPath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setFill:'>
<arg index='0' declared_type='id' name='fill' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4f8' selector='setOpacity:'>
<arg index='0' declared_type='CGFloat' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setShadow:'>
<arg index='0' declared_type='id' name='shadow' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setStroke:'>
<arg index='0' declared_type='id' name='stroke' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4B8' selector='setVisible:'>
<arg index='0' declared_type='BOOL' name='visible' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='shadow'>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='stroke'>
<retval declared_type='id' type='@'/>
</method>
<method type='B8@0:4' selector='visible'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='PXRenderable'>
<method type='@8@0:4' selector='padding'>
<retval declared_type='PXOffsets*' type='@'/>
</method>
<method type='@8@0:4' selector='parent'>
<retval declared_type='id' type='@'/>
</method>
<method type='v12@0:4^{CGContext=}8' selector='render:'>
<arg index='0' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8B24' selector='renderToImageWithBounds:withOpacity:'>
<arg index='0' declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg index='1' declared_type='BOOL' name='opaque' type='B'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method type='v12@0:4@8' selector='setPadding:'>
<arg index='0' declared_type='PXOffsets*' name='padding' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setParent:'>
<arg index='0' declared_type='id' name='parent' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v32@0:4{CGAffineTransform=ffffff}8' selector='setTransform:'>
<arg index='0' declared_type='CGAffineTransform' name='transform' type='{CGAffineTransform=ffffff}'/>
<retval declared_type='void' type='v'/>
</method>
<method type='{CGAffineTransform=ffffff}8@0:4' selector='transform'>
<retval declared_type='CGAffineTransform' type='{CGAffineTransform=ffffff}'/>
</method>
</informal_protocol>
<informal_protocol name='PXShadowPaint'>
<method type='v16@0:4^{CGPath=}8^{CGContext=}12' selector='applyInsetToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v16@0:4^{CGPath=}8^{CGContext=}12' selector='applyOutsetToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXStrokeRenderer'>
<method type='v16@0:4^{CGPath=}8^{CGContext=}12' selector='applyStrokeToPath:withContext:'>
<arg index='0' declared_type='CGPathRef' name='path' type='^{CGPath=}'/>
<arg index='1' declared_type='CGContextRef' name='context' type='^{CGContext=}'/>
<retval declared_type='void' type='v'/>
</method>
<method type='B8@0:4' selector='isOpaque'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
<informal_protocol name='PXStyleable'>
<method type='@8@0:4' selector='animationPropertyHandlers'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method type='@16@0:4@8@12' selector='attributeValueForName:withNamespace:'>
<arg index='0' declared_type='NSString*' name='name' type='@'/>
<arg index='1' declared_type='NSString*' name='aNamespace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='i8@0:4' selector='bounds'>
<retval declared_type='CGRect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
</method>
<method type='B12@0:4@8' selector='canStylePseudoClass:'>
<arg index='0' declared_type='NSString*' name='pseudoClass' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method type='@8@0:4' selector='defaultPseudoClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='i8@0:4' selector='frame'>
<retval declared_type='int' type='i'/>
</method>
<method type='@8@0:4' selector='pxStyleChildren'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='pxStyleElementName'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='pxStyleNamespace'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='pxStyleParent'>
<retval declared_type='id' type='@'/>
</method>
<method type='v8@0:4' selector='registerNotifications'>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4i8' selector='setBounds:'>
<arg index='0' declared_type='CGRect' name='bounds' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4i8' selector='setFrame:'>
<arg index='0' declared_type='int' name='frame' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setStyleCSS:'>
<arg index='0' declared_type='NSString*' name='styleCSS' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setStyleClass:'>
<arg index='0' declared_type='NSString*' name='styleClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4@8' selector='setStyleId:'>
<arg index='0' declared_type='NSString*' name='styleId' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method type='v12@0:4i8' selector='setStyleMode:'>
<arg index='0' declared_type='PXStylingMode' name='styleMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method type='@8@0:4' selector='styleCSS'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='styleClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='styleId'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='styleKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='i8@0:4' selector='styleMode'>
<retval declared_type='PXStylingMode' type='i'/>
</method>
<method type='@12@0:4@8' selector='styleableForPseudoElement:'>
<arg index='0' declared_type='NSString*' name='pseudoElement' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='supportedPseudoClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='@8@0:4' selector='supportedPseudoElements'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method type='v8@0:4' selector='updateStyles'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='updateStylesAsync'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='updateStylesNonRecursively'>
<retval declared_type='void' type='v'/>
</method>
<method type='v8@0:4' selector='updateStylesNonRecursivelyAsync'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='PXVirtualControl'>
<method type='B8@0:4' selector='isVirtualControl'>
<retval declared_type='BOOL' type='B'/>
</method>
</informal_protocol>
</signatures>
